Title: Kirby 2.4.0 Beta 1

----

Date: 2016-09-27

----

Download: 

----

Text:

## Download

- (link: https://github.com/getkirby/kirby/archive/develop.zip text: Kirby Core 2.4.0 Beta 1)
- (link: https://github.com/getkirby/panel/archive/develop.zip text: Kirby Panel 2.4.0 Beta 1)

Replace your current kirby and panel folders to install the beta. We are currently working on a new CLI version, which will make betas installable via command line as well.

## Beta!

Be aware that **this version is not meant for production**. Only install it locally to test it with your current projects.

Please use Github issues to report any bugs: 

- (link: https://github.com/getkirby/kirby/issues text: Kirby Core Issues)
- (link: https://github.com/getkirby/panel/issues text: Kirby Panel Issues)
- (link: https://github.com/getkirby/toolkit/issues text: Kirby Toolkit Issues)

## Highlights in 2.4.0

### Permissions

The Panel finally supports permissions!
Each user role can now define a set of rules to restrict each Panel action based on the action type, the current page/file, user, language or even a combination of all of them.

You want to have a translator role that is only able to edit a specific language? Or an editor role that can only create new drafts in the blog but not publish them? Or a role that only allows users to edit their own profile page? It's all possible now!

(link: docs/panel/permissions text: Read more about this feature in the docs).

### Content Representations

One of Kirby's biggest advantages is its content structure. You can use as many fields and field types as you need to create content that isn't just a large WYSIWYG field.

Kirby 2.4 has a new core feature called "Content Representations" that allows you to output the content in different formats. Be it (link: docs/cookbook/ajax-form-validation text: JSON for your AJAX script) or to use Kirby as API for other tools, an automatic RSS feed representation of your blog or a plain text representation of your résumé.

(link: docs/developer-guide/advanced/representations text: Read more about this feature in the docs).

### Support for language-specific domains

Kirby now supports using a separate domain for each language out of the box:

```php
c::set('languages', array(
  array(
    'code'    => 'en',
    'name'    => 'English',
    'default' => true,
    'locale'  => 'en_US',
    'url'     => 'https://example.com',
  ),
  array(
    'code'    => 'de',
    'name'    => 'Deutsch',
    'locale'  => 'de_DE',
    'url'     => 'https://example.de',
  )
));
```

Kirby will detect the language based on the domain and links to other languages, e.g. in language switchers, will just work™.

### Kirby objects are easier to debug

Kirby objects such as `$page`, `$site` or `$file` have a lot of connections to other objects. The result is that a lot of stuff is printed when debugging those objects with `var_dump()`, `print_r()` or `dump()`.
Starting with Kirby 2.4, the most complex objects are now printed with their most important information only. Please note that this new feature only works with PHP 5.6 or later.

### Improved exception handling

Kirby now has a new visual and powerful error view powered by [Whoops](https://filp.github.io/whoops/).
It becomes active automatically once you enable (link: docs/cheatsheet/options/debug text: debug mode). And on your production site it displays a nice and clean error page instead that doesn't tell attackers anything about the error.

(image: whoops.png link: self)

---

## Panel

- Add support for Panel permissions, see (link: docs/panel/permissions text: permissions docs)
- Hooks are now using event objects (see below) with additional useful meta information
- Prefix Panel session variables to prevent overlap with plugins
- Support for a default user blueprint for (link: docs/panel/users#custom-user-form-fields text: custom user form fields)
- Better error handling for forms
- Fix overflow issue for long checkbox labels
- Fix visibility of the text field counter in the file view
- Complex objects are now printed with their most important information only when debugging (PHP 5.6+)

## Core

- New (link: docs/developer-guide/advanced/representations text: Content Representations) feature
- Roles now use their own PHP files that are compatible with the registry, see (link: docs/panel/permissions text: permissions docs)
- Multi-language sites can now use separate domains per language
- Complex objects are now printed with their most important information only when debugging (PHP 5.6+)
- New error view for exceptions powered by [Whoops](https://filp.github.io/whoops/) (only in debug mode)
- Custom language files can now be written in YAML
- Add (sheet: options/tinyurl-url) option to support separate tinyurl domains
- (sheet: file/blur) now accepts a blur amount parameter
- The `cache.ignore` option now only has to contain URIs of the default language
- Add support for hook wildcards
- Inside hooks, `$this` is now set to a new event object with useful information about the event
- All roots can now be (link: docs/developer-guide/configuration/folders text: fully customized) in the `site.php`
- Update Parsedown library
- `link` kirbytag now automatically adds `rel="noopener noreferrer"` when you set `target="_blank"` to improve the security and performance of such links
- User login no longer deletes session data, e.g. from plugins
- Prefix Kirby session variables to prevent overlap with plugins
- Fix a bug in `$field->isTranslated()` that would return incorrect results if the field value was set but identical to the default language
- Fix a bug in the controller registry that would allow plugins to override custom controllers
- Core dependencies are now managed with Composer, also the core can now be installed via Composer

## Toolkit

- Routes can now be restricted to match only on one host, see (link: docs/developer-guide/toolkit/routing text: the docs)
- Add (toolkit: visitor/acceptance) and (toolkit: visitor/accepts)
- (toolkit: str/random) is now more random in PHP 7.0 and later
- Add (toolkit: str/quick-random)
- Complex objects are now printed with their most important information only when debugging (PHP 5.6+)
- `Obj`: Fix issue if the `$data` array contains empty keys; those are now ignored
- Improve type handling in `html::attr` to support `0` as a float value
- `html::attr`: Escape quotes in the attribute value
- (toolkit: html/a) now automatically adds `rel="noopener"` when you set `target="_blank"` to improve the security and performance of such links
- New (toolkit: str/from), (toolkit: str/before), (toolkit: str/until) and (toolkit: str/after) methods
- Remove legacy code in the `Escape` class
